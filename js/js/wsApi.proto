syntax = "proto2";
package protobuf.ws;

message SubscribeTickerChannelRequest {
    // SUBSCRIBE_TICKER
    required string currency_pair = 1;
    optional float frequency = 2;
}

message SubscribeOrderBookRawChannelRequest {
    // SUBSCRIBE_ORDER_BOOK_RAW
    required string currency_pair = 1;
    optional int32 depth = 2;
}

message SubscribeOrderBookChannelRequest {
    // SUBSCRIBE_ORDER_BOOK
    required string currency_pair = 1;
    optional int32 depth = 2;
}

message SubscribeTradeChannelRequest {
    // SUBSCRIBE_TRADE
    required string currency_pair = 1;
}


message SubscribeCandleChannelRequest {
    // SUBSCRIBE_CANDLE
    enum CandleInterval {
        CANDLE_1_MINUTE = 1;
    }
    required string currency_pair = 1;
    required CandleInterval interval = 2;
    optional int32 depth = 3 [default=0];
}

message UnsubscribeRequest {
    // UNSUBSCRIBE
    enum ChannelType {
        TICKER = 1;
        ORDER_BOOK_RAW = 2;
        ORDER_BOOK = 3;
        TRADE = 4;
        CANDLE = 5;
    }
    required ChannelType channel_type = 1;
    required string currency_pair = 2;
}

message RequestExpired {
    required int64 now = 1;
    required int32 ttl = 2;
}

message LoginRequest {
    // LOGIN
    required RequestExpired expire_control = 1;
    required string api_key = 2;
}

message PutLimitOrderRequest {
    // PUT_LIMIT_ORDER
    enum OrderType {
        BID = 1;
        ASK = 2;
    }
    required RequestExpired expire_control = 1;
    required string currency_pair = 2;
    required OrderType order_type = 3;
    required string amount = 4;
    required string price = 5;
}

message CancelLimitOrderRequest {
    // CANCEL_LIMIT_ORDER
    required RequestExpired expire_control = 1;
    required string currency_pair = 2;
    required int64 id = 3;
}

message TickerEvent {
    required int64  timestamp = 1;
    optional string last = 2;
    optional string high = 3;
    optional string low = 4;
    optional string volume = 5;
    optional string vwap = 6;
    optional string max_bid = 7;
    optional string min_ask = 8;
    optional string best_bid = 9;
    optional string best_ask = 10;
}

message TickerChannelSubscribedResponse {
    // TICKER_CHANNEL_SUBSCRIBED
    required string currency_pair = 1;
    repeated TickerEvent data = 2;
}

message OrderBookRawEvent {
    enum OrderType {
        BID = 1;
        ASK = 2;
    }
    required OrderType order_type = 1 [default = BID];
    required int64 id = 2;
    required int64 timestamp = 3;
    optional string price = 4;
    required string quantity = 5;
}

message OrderBookRawChannelSubscribedResponse {
    // ORDER_BOOK_RAW_CHANNEL_SUBSCRIBED
    required string currency_pair = 1;
    repeated OrderBookRawEvent data = 2;
}

message OrderBookEvent {
    enum OrderType {
        BID = 1;
        ASK = 2;
    }
    required OrderType order_type = 1 [default = BID];
    required int64 timestamp = 2;
    required string price = 3;
    required string quantity = 4;
}

message OrderBookChannelSubscribedResponse {
    // ORDER_BOOK_CHANNEL_SUBSCRIBED
    required string currency_pair = 1;
    repeated OrderBookEvent data = 2;
}

message TradeEvent {
    enum TradeType {
        BUY = 1;
        SELL = 2;
    }
    required int64 id = 1;
    required TradeType trade_type = 2 [default = BUY];
    required int64 timestamp = 3;
    required string price = 4;
    required string quantity = 5;
}

message TradeChannelSubscribedResponse {
    // TRADE_CHANNEL_SUBSCRIBED
    required string currency_pair = 1;
    repeated TradeEvent data = 2;
}

message CandleEvent {
    required int64 timestamp = 1;
    required string open_price = 2;
    required string close_price = 3;
    required string high_price = 4;
    required string low_price = 5;
    required string volume = 6;
    required string quoted_volume = 7;
}

message CandleChannelSubscribedResponse {
    // CANDLE_CHANNEL_SUBSCRIBED
    required string currency_pair = 1;
    required SubscribeCandleChannelRequest.CandleInterval interval = 2;
    repeated CandleEvent data = 3;
}

message ChannelUnsubscribedResponse {
    // CHANNEL_UNSUBSCRIBED
    required UnsubscribeRequest.ChannelType type = 1;
    required string currency_pair = 2;
}

message ErrorResponse {
    // ERROR
    required int32 code = 1;
    required string message = 2;
}

message TickerNotification {
    // TICKER_NOTIFY
    required string currency_pair = 1;
    repeated TickerEvent data = 2;
}

message OrderBookRawNotification {
    // ORDER_BOOK_RAW_NOTIFY
    required string currency_pair = 1;
    repeated OrderBookRawEvent data = 2;
}

message OrderBookNotification {
    // ORDER_BOOK_NOTIFY
    required string currency_pair = 1;
    repeated OrderBookEvent data = 2;
}

message TradeNotification {
    // TRADE_NOTIFY
    required string currency_pair = 1;
    repeated TradeEvent data = 2;
}

message CandleNotification {
    // CANDLE_NOTIFY
    required string currency_pair = 1;
    required SubscribeCandleChannelRequest.CandleInterval interval = 2;
    repeated CandleEvent data = 3;
}

message LoginResponse {
    // LOGIN_RESPONSE
}

message PutLimitOrderResponse {
    // PUT_LIMIT_ORDER_RESPONSE
    required int64  order_id = 1;
    required string amount_left = 2;
}

message CancelLimitOrderResponse {
    // CANCEL_LIMIT_ORDER_RESPONSE
    required int64  order_id = 1;
    required string amount_left = 2;
}

message WsRequestMetaData {
    enum WsRequestMsgType {
        SUBSCRIBE_TICKER = 1;
        SUBSCRIBE_ORDER_BOOK_RAW = 2;
        SUBSCRIBE_ORDER_BOOK = 3;
        SUBSCRIBE_TRADE = 4;
        SUBSCRIBE_CANDLE = 5;
        UNSUBSCRIBE = 6;
        LOGIN = 7;
        PUT_LIMIT_ORDER = 8;
        CANCEL_LIMIT_ORDER = 9;
    }
    required WsRequestMsgType request_type = 1;
    optional string token = 2;
    optional string sign = 3;
}

message WsResponseMetaData {
    enum WsResponseMsgType {
        TICKER_CHANNEL_SUBSCRIBED = 1;
        ORDER_BOOK_RAW_CHANNEL_SUBSCRIBED = 2;
        ORDER_BOOK_CHANNEL_SUBSCRIBED = 3;
        TRADE_CHANNEL_SUBSCRIBED = 4;
        CANDLE_CHANNEL_SUBSCRIBED = 5;
        CHANNEL_UNSUBSCRIBED = 6;
        ERROR = 7;
        TICKER_NOTIFY = 8;
        ORDER_BOOK_RAW_NOTIFY = 9;
        ORDER_BOOK_NOTIFY = 10;
        TRADE_NOTIFY = 11;
        CANDLE_NOTIFY = 12;
        LOGIN_RESPONSE = 13;
        PUT_LIMIT_ORDER_RESPONSE = 14;
        CANCEL_LIMIT_ORDER_RESPONSE = 15;
    }
    required WsResponseMsgType response_type = 1;
    optional string token = 2;
}

message WsRequest {
    required WsRequestMetaData meta = 1;
    required bytes msg = 2;
}

message WsResponse {
    required WsResponseMetaData meta = 1;
    required bytes msg = 2;
}